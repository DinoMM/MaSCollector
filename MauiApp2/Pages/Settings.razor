@page "/settings"
@using MauiApp2.Data
@using Microsoft.Maui.Storage
@using System.IO
@using System.Text.Json
@using CommunityToolkit.Maui.Storage

<h3>Nastavenia</h3>

<button @onclick="VyberPriecinka" class="oi oi-folder btn btn-primary btn-lg"></button>
<input type="text" disabled="disabled" @bind="Zberac.FolderPath" @onclick="VyberPriecinka" />
<div class="m-3">
	<button @onclick="SaveFiles" class="btn btn-outline-success btn-lg m-3"><i class="oi oi-file"></i> Save data to selected folder</button>
</div>


@code {


	private async void VyberPriecinka()
	{
		try
		{
			PermissionStatus status = PermissionStatus.Unknown;
			status = await Permissions.CheckStatusAsync<Permissions.StorageWrite>();        //zisit ci ma povolenie na write do suborov
			if (status != PermissionStatus.Granted)
			{
				if (Permissions.ShouldShowRationale<Permissions.StorageWrite>())    //ak uz bol zamietnuty niekedy tak vypise hlasku
				{
					await App.Current.MainPage.DisplayAlert("Apliakacia potrebuje povolenie na spravu k suborom", "", "OK");
				}
				status = await Permissions.RequestAsync<Permissions.StorageWrite>();        //opyta sa na povolenie
				if (status != PermissionStatus.Granted)				//znova sa overi ci je povolenie
				{
					/*#if ANDROID
					var docsDirectory = Android.App.Application.Context.GetExternalFilesDir(Android.OS.Environment.DirectoryDcim);
					File.WriteAllText($"{docsDirectory.AbsoluteFile.Path}/atextfile.txt", "contents are here");
					#endif*/				
					await App.Current.MainPage.DisplayAlert("Apliakacia potrebuje povolenie na spravu k suborom", "", "OK");
					return;
				}
			}

		}
		catch (PermissionException e)
		{
			await App.Current.MainPage.DisplayAlert("Doslo k neocakavnej chybe pri udelovani povoleni", $"{e.StackTrace}", "OK");			
		}

		try
		{
			var folder = await FolderPicker.PickAsync(default);
			Zberac.FolderPath = folder.Folder.Path;
		}
		catch (Exception e)
		{
			await App.Current.MainPage.DisplayAlert("Chyba pri vyberu precinka", $"{e.StackTrace}", "OK");
		}
		await InvokeAsync(() => StateHasChanged());
	}

	private async Task SaveFiles()
	{
		try
		{
			await SaveToFile(Zberac.ZoznamZaznamov.ToArray(), "DataFromObserve.csv");
			await SaveToFile(Zberac.ZoznamPredajna.ToArray(), "PredajnaFromObserve.csv");
			await SaveToFile(Zberac.ZoznamKontainer.ToArray(), "KontainerFromObserve.csv");
			await SaveToFile(Zberac.ZoznamFlaskomat.ToArray(), "FlaskomatFromObserve.csv");
			foreach (Item o in Zberac.ZoznamPrichodov)
			{
				o.Namerany();	
			}
			await SaveToFile(Zberac.ZoznamPrichodov.ToArray(), "DataFromArrival.csv");
			//vymaze aktualny zoznam, kedze je uz ulozeny (aby sa neukladali dalsie data)
			List<Item> novy = new List<Item>();
			foreach (Item o in Zberac.ZoznamZaznamov)
			{
				if (!o.Ulozene)
				{
					novy.Add(o);
				}
			}
			Zberac.ZoznamZaznamov.Clear();
			Zberac.ZoznamZaznamov.AddRange(novy);

			Zberac.ZoznamPredajna.Clear();
			Zberac.ZoznamKontainer.Clear();
			Zberac.ZoznamFlaskomat.Clear();
			Zberac.ZoznamPrichodov.Clear();
			await App.Current.MainPage.DisplayAlert("List was added to the file", $"List has been added to {Zberac.FolderPath}", "OK");
		}
		catch (Exception e)
		{
			await App.Current.MainPage.DisplayAlert("Error:", $" {e.Message}", "OK");

		}

	}

	private async Task SaveToFile(IItems[] zoznam, string nazovSubora)		//pridava do subora zaznamy
	{
		if (Zberac.FolderPath.Equals("Vyber priecinok..."))
		{
			await App.Current.MainPage.DisplayAlert("Choose a folder please", $"", "OPSIE");
			return;
		}
		try
		{
			var path = Path.Combine(Zberac.FolderPath, nazovSubora);
			if (!File.Exists(path))
			{
				try
				{
					File.WriteAllText(path, "");        //vytvori subor ak neni
				}
				catch (Exception e)
				{
					await App.Current.MainPage.DisplayAlert("Chyba pri vytvarani subora", $"Cesta:{path}, chyba:{e.Message}.\n stacktrace {e.StackTrace}", "OK");

				}
			}

			foreach (var item in zoznam)
			{
				if (item is Item)
				{
					if (((Item)item).Ulozene)
					{
						File.AppendAllText(path, ((Item)item).GetCsvZaznam());
					}
				}
				if (item is ItemAktivum)
				{
					File.AppendAllText(path, ((ItemAktivum)item).GetCsvZaznam());
				}
			}
				     
			//await App.Current.MainPage.DisplayAlert("List was added to the file", $"List has been added to {path}", "OK");
		}
		catch (Exception e)
		{
			await App.Current.MainPage.DisplayAlert("Error in appending a file ", $"Unhandled exception occured: {e.Message}. StackTrace: {e.StackTrace} ", "OH");
		}
	}


	
}

